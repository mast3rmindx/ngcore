// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Sheet sheet
//
// swagger:model sheet
type Sheet struct {

	// accounts
	Accounts map[string]Account `json:"accounts,omitempty"`

	// anonymous
	Anonymous interface{} `json:"anonymous,omitempty"`
}

// Validate validates this sheet
func (m *Sheet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccounts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Sheet) validateAccounts(formats strfmt.Registry) error {

	if swag.IsZero(m.Accounts) { // not required
		return nil
	}

	for k := range m.Accounts {

		if err := validate.Required("accounts"+"."+k, "body", m.Accounts[k]); err != nil {
			return err
		}
		if val, ok := m.Accounts[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *Sheet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Sheet) UnmarshalBinary(b []byte) error {
	var res Sheet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
