// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetBlockHashOrHeightHandlerFunc turns a function with the right signature into a get block hash or height handler
type GetBlockHashOrHeightHandlerFunc func(GetBlockHashOrHeightParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBlockHashOrHeightHandlerFunc) Handle(params GetBlockHashOrHeightParams) middleware.Responder {
	return fn(params)
}

// GetBlockHashOrHeightHandler interface for that can handle valid get block hash or height params
type GetBlockHashOrHeightHandler interface {
	Handle(GetBlockHashOrHeightParams) middleware.Responder
}

// NewGetBlockHashOrHeight creates a new http.Handler for the get block hash or height operation
func NewGetBlockHashOrHeight(ctx *middleware.Context, handler GetBlockHashOrHeightHandler) *GetBlockHashOrHeight {
	return &GetBlockHashOrHeight{Context: ctx, Handler: handler}
}

/*GetBlockHashOrHeight swagger:route GET /block/{hash_or_height} getBlockHashOrHeight

get the block by hash

*/
type GetBlockHashOrHeight struct {
	Context *middleware.Context
	Handler GetBlockHashOrHeightHandler
}

func (o *GetBlockHashOrHeight) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetBlockHashOrHeightParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
