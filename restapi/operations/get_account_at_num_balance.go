// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAccountAtNumBalanceHandlerFunc turns a function with the right signature into a get account at num balance handler
type GetAccountAtNumBalanceHandlerFunc func(GetAccountAtNumBalanceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountAtNumBalanceHandlerFunc) Handle(params GetAccountAtNumBalanceParams) middleware.Responder {
	return fn(params)
}

// GetAccountAtNumBalanceHandler interface for that can handle valid get account at num balance params
type GetAccountAtNumBalanceHandler interface {
	Handle(GetAccountAtNumBalanceParams) middleware.Responder
}

// NewGetAccountAtNumBalance creates a new http.Handler for the get account at num balance operation
func NewGetAccountAtNumBalance(ctx *middleware.Context, handler GetAccountAtNumBalanceHandler) *GetAccountAtNumBalance {
	return &GetAccountAtNumBalance{Context: ctx, Handler: handler}
}

/*GetAccountAtNumBalance swagger:route GET /account@{num}/balance getAccountAtNumBalance

get the balance of one account

*/
type GetAccountAtNumBalance struct {
	Context *middleware.Context
	Handler GetAccountAtNumBalanceHandler
}

func (o *GetAccountAtNumBalance) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountAtNumBalanceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
