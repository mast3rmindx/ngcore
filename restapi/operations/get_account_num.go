// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAccountNumHandlerFunc turns a function with the right signature into a get account num handler
type GetAccountNumHandlerFunc func(GetAccountNumParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccountNumHandlerFunc) Handle(params GetAccountNumParams) middleware.Responder {
	return fn(params)
}

// GetAccountNumHandler interface for that can handle valid get account num params
type GetAccountNumHandler interface {
	Handle(GetAccountNumParams) middleware.Responder
}

// NewGetAccountNum creates a new http.Handler for the get account num operation
func NewGetAccountNum(ctx *middleware.Context, handler GetAccountNumHandler) *GetAccountNum {
	return &GetAccountNum{Context: ctx, Handler: handler}
}

/*GetAccountNum swagger:route GET /account/{num} getAccountNum

get the detail of one account

*/
type GetAccountNum struct {
	Context *middleware.Context
	Handler GetAccountNumHandler
}

func (o *GetAccountNum) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccountNumParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
