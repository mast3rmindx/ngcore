// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetBlockHashOrHeightOKCode is the HTTP code returned for type GetBlockHashOrHeightOK
const GetBlockHashOrHeightOKCode int = 200

/*GetBlockHashOrHeightOK got the block

swagger:response getBlockHashOrHeightOK
*/
type GetBlockHashOrHeightOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetBlockHashOrHeightOK creates GetBlockHashOrHeightOK with default headers values
func NewGetBlockHashOrHeightOK() *GetBlockHashOrHeightOK {

	return &GetBlockHashOrHeightOK{}
}

// WithPayload adds the payload to the get block hash or height o k response
func (o *GetBlockHashOrHeightOK) WithPayload(payload interface{}) *GetBlockHashOrHeightOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get block hash or height o k response
func (o *GetBlockHashOrHeightOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBlockHashOrHeightOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetBlockHashOrHeightBadRequestCode is the HTTP code returned for type GetBlockHashOrHeightBadRequest
const GetBlockHashOrHeightBadRequestCode int = 400

/*GetBlockHashOrHeightBadRequest Error

swagger:response getBlockHashOrHeightBadRequest
*/
type GetBlockHashOrHeightBadRequest struct {

	/*error text
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetBlockHashOrHeightBadRequest creates GetBlockHashOrHeightBadRequest with default headers values
func NewGetBlockHashOrHeightBadRequest() *GetBlockHashOrHeightBadRequest {

	return &GetBlockHashOrHeightBadRequest{}
}

// WithPayload adds the payload to the get block hash or height bad request response
func (o *GetBlockHashOrHeightBadRequest) WithPayload(payload string) *GetBlockHashOrHeightBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get block hash or height bad request response
func (o *GetBlockHashOrHeightBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBlockHashOrHeightBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
