// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetBlockHashHandlerFunc turns a function with the right signature into a get block hash handler
type GetBlockHashHandlerFunc func(GetBlockHashParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBlockHashHandlerFunc) Handle(params GetBlockHashParams) middleware.Responder {
	return fn(params)
}

// GetBlockHashHandler interface for that can handle valid get block hash params
type GetBlockHashHandler interface {
	Handle(GetBlockHashParams) middleware.Responder
}

// NewGetBlockHash creates a new http.Handler for the get block hash operation
func NewGetBlockHash(ctx *middleware.Context, handler GetBlockHashHandler) *GetBlockHash {
	return &GetBlockHash{Context: ctx, Handler: handler}
}

/*GetBlockHash swagger:route GET /block/{hash} getBlockHash

get the block by hash

*/
type GetBlockHash struct {
	Context *middleware.Context
	Handler GetBlockHashHandler
}

func (o *GetBlockHash) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetBlockHashParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
