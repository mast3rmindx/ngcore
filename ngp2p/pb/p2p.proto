syntax = "proto3";

package pb;
option go_package = "github.com/ngchain/ngcore/ngp2p/pb";

import "ngtypes/types.proto";

/* common */
message Header {
  int32 network_id = 1;

  string uuid = 2;
  int64 timestamp = 3;

  bytes peer_key = 5; // act as the node ID
  bytes sign = 6;
}

// a protocol define a set of requests and responses
message Message {
  Header header = 1;
  bytes payload = 2;
}

/* wired */
message PingPayload {
  uint64 from = 1;
  uint64 latest = 2;
  bytes checkpoint_hash = 3;
}

message PongPayload {
  uint64 from = 1;
  uint64 latest = 2;
  bytes checkpoint_hash = 3;
}

enum ChainType {
  Invalid = 0;
  Blocks = 1;
  Headers = 2;
  Hashes = 3;
}

message GetChainPayload {
  ChainType type = 1;
  repeated bytes from = 2; // beginning hashes
  bytes to = 3; // ending hash
}

message ChainPayload {
  repeated bytes hashes = 2;
  repeated ngtypes.BlockHeader headers = 3;
  repeated ngtypes.Block blocks = 4;
}
