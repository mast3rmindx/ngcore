syntax = "proto3";

package pb;
option go_package = "github.com/ngchain/ngcore/ngp2p/pb";

import "ngtypes/types.proto";

/* common */
message Header {
    int32 network_id = 1;

    string uuid = 2;
    int64 timestamp = 3;

    bytes peer_key = 5; // act as the node ID
    bytes sign = 6;
}

// a protocol define a set of requests and responses
message Message {
    Header header = 1;
    uint64 nonce = 2;
    bytes payload = 3;
}

/* wired */
message PingPongPayload {
    uint64 block_height = 1;
    uint64 vault_height = 2;

    bytes latest_block_hash = 3;
    bytes latest_vault_hash = 4;
}

message GetChainPayload {
    uint64 vault_height = 1;
}

message ChainPayload {
    ngtypes.Vault vault = 1;
    repeated ngtypes.Block blocks = 2;
    uint64 latest_height = 3;
}

message GetPoolPayload {
}

message PoolPayload {
    repeated ngtypes.Transaction txs = 1;
}

/* broadcast(pub-sub) */
message BroadcastBlockPayload {
    ngtypes.Vault vault = 1;
    ngtypes.Block block = 2;
}

// BroadcastTransactionPayload = ngtypes.Transaction
