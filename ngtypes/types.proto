syntax = "proto3";

package ngtypes;
option go_package = "github.com/ngchain/ngcore/ngtypes";

message Account {
  uint64 num = 1;
  bytes owner = 2; // address -> balance in anonymous fields

  bytes contract = 5; // separate the code and state
  bytes context = 6;
}

enum NetworkType {
  ZERONET = 0; // zero is INVALID: TODO: Add rule to block/tx check
  TESTNET = 1; // TESTNET uses odd number
  MAINNET = 2; // MAINNET uses even number
  // TEST_FUTURE = 3;
  // MAIN_FUTURE = 4;
}

message Block {
  NetworkType network = 1;

  uint64 height = 2;
  int64 timestamp = 3;

  bytes prev_block_hash = 4;
  bytes trie_hash = 5;
  // bytes prev_sheet_hash = 6; // the hash of sheet before block txs

  bytes difficulty = 7; // diff = maxTarget / Big(header_hash)
  bytes nonce = 8;

  // Sheet prev_sheet = 9; // can be nil, the sheet before block txs
  repeated Tx txs = 10; // miner should build the generate tx by themselves
}

enum TxType {
  INVALID = 0;
  GENERATE = 1;
  REGISTER = 2;
  LOGOUT = 3;

  TRANSACTION = 10;

  ASSIGN = 20;
  APPEND = 21;
}

// Or you can call it Op
message Tx {
  NetworkType network = 1;
  TxType type = 2;

  bytes prev_block_hash = 3; // only available within one block

  uint64 convener = 4; // account num required
  repeated bytes participants = 5;
  bytes fee = 6;
  repeated bytes values = 7;

  // extension
  bytes extra = 8;

  bytes sign = 9;
}

// Sheet is a simplified States
message Sheet {
  uint64 height = 1;
  map<string, bytes> anonymous = 2; // bs58_address(aka anonymous recipient) -> balance
  map<uint64, ngtypes.Account> accounts = 3;
}
